---
title: "Supplemental material: Automating ecological and fisheries modelling with agentic AI"
editor: source
format: 
    docx:
        reference-doc: template.docx
---


## Supplemental material

## Supplemental methods 

## Generative AI use in Research Statement 

In addition to the AI tools described in the manuscript, we used Github Copilot with Claude Sonnet 4.0 to assist in generating code for the figures. Copilot (GPT 4-Turbo) was asked to 'peer-review' a complete draft of the manuscript and we used those reviews to identify improvements that were manually made. Editorial suggestions on the manuscript were made with Roo Code and Claude Sonnet 4.0. The authors take full responsibility for all code and content in this work. 

### Case study specification sheets 

#### von Bertalanffy growth model 

```
# Fit von Bertalanffy growth model to simulated data

## Introduction
We have some length-at-age data for a fish species. We want to fit a von Bertalanffy growth model to this data to obtain estimates of the parameters. 

## Aims of the analysis 

1. What are the K, Linf, and t0 parameters for the von Bertalanffy growth model?
2. What is the uncertainty in these parameters?
3. How large do we expect fish to be at age 5?

## Data methodology

The data we will fit to is long-format data with ages and lengths recorded for individual fish. 

## Analysis methodology 

We will use non-linear least squares with the `nls()` function to fit a von Bertalanffy growth model to the data. The specific form of the von Bertalanffy growth model is `length = Linf * (1 - exp(-K * (age - t0)))`

## Instructions for the agent

Complete this project by filling out the summary table in `parameter-output.csv`. This is a csv file that includes a row for each of the following: 
- K, Linf, and t0 parameters
- Length at age 5

It includes columns for the parameter name, estimated value, lower CI and upper CI. 

Also create a plot that shows the observed lengths at age and the fitted von Bertalanffy growth curve. 

### Tech context. 

Use the R program
Use the `nls` function for fitting von Bertalanffy growth model. 

You will need to guess starting values for the `nls()` function, good guesses are: Linf = max(length), K = 0.1, t0 = 0.

Use the `boot` package for bootstrapping the model to estimate confidence intervals. 
Use 95% percentiles to summarize the bootstrap estimates. 

Use ggplot2 with  `theme_set(theme_classic())` for plots

### Workflow 

1. Create a todo list and keep track of progress
2. Write functions for the von Bertalanffy growth model and for starting parameters
3. Fit the von Bertalanffy growth model to the data
4. Estimate uncertainty intervals
5. Estimate length at age 5
6. Save the summary table as a csv file
7. Create a plot of observed lengths and fitted growth curve

## Meta data 

### example_vb_data.csv

Variables
- age: Age of the fish in years
- length: Length of the fish in cm

```

#### von Bertalanffy growth model with simplified specification sheet

```
# Fit von Bertalanffy growth model to simulated data

## Introduction
We have some length-at-age data for a fish species. We want to fit a von Bertalanffy growth model to this data to obtain estimates of the parameters. 

## Aims of the analysis 

1. What are the K, Linf, and t0 parameters for the von Bertalanffy growth model?
2. What is the uncertainty in these parameters?
3. How large do we expect fish to be at age 5?

## Data methodology

The data we will fit to is long-format data with ages and lengths recorded for individual fish. 

## Instructions for the agent

Complete this project by filling out the summary table in `parameter-output.csv`. This is a csv file that includes a row for each of the following: 
- K, Linf, and t0 parameters
- Length at age 5

It includes columns for the parameter name, estimated value, lower CI and upper CI. 

Also create a plot that shows the observed lengths at age and the fitted von Bertalanffy growth curve. 

### Tech context. 

Use the R program to fit a von Bertalanffy curve to the data. Estimate the mean and the 95% confidence intervals for the parameters. 

Use ggplot2 with  `theme_set(theme_classic())` for plots

## Meta data 

### example_vb_data.csv

Variables
- age: Age of the fish in years
- length: Length of the fish in cm


```

#### Generalized linear model 


~~~

# Analysis of fish dependence on coral habitat

## Introduction
This project will ask how abundance of fish juveniles depends on coral cover. The fish we are interested in is *Bolbometopon muricatum*, the bumphead parrotfish. Also known as 'topa' in the local language of our study region. We will analyze survey data from 49 sites, that includes benthic cover surveys and surveys fish abundance at the same locations. We are studying its juvenile habitat. 

## Aims of the analysis 

1. Does fish abundance depend on branching coral cover? 
2. What is the direction and strength of the relationship between fish abundance and branching coral cover? 
3. Does fish abundance depend on soft coral cover? 
4. What is the direction and strength of the relationship between fish abundance and branching coral cover? 

## Data methodology

The data was collected with the point intersect transect method. Divers swam along transects. There were several transects per site.  Along each transect they dropped points and recorded the type of benthic organism (in categories) on that point. Percentage cover for one organism type can then be calculated as the number of points with that organism divided by the total number of points on that transect. In our data we have percent cover of branching corals and percent cover of soft corals. 
Transects were averaged to give a single value for each site. 
At each site divers also counted the number of juvenile 'topa' along dive transects of the same length. 

## Analysis methodology 

We will use generalized linear models to analyze the relationship between topa and the two coral cover types. 
Topa abundance is probably over-dispersed, so we we will need to use a negative binomial family. We will use R and the MASS package: 

```
MASS::glm.nb(pres.topa ~ CB_cover*soft_cover, data = fish_coral_cover_sites)
```

To obtain a final model we should model selection, starting with a full model then working towards simpler models. We will use likelihood ratio tests to compare models. For example the first test would be: 

```
m1 <- MASS::glm.nb(pres.topa ~ CB_cover*soft_cover, data = fish_coral_cover_sites)
m2 <- MASS::glm.nb(pres.topa ~ CB_cover + soft_cover, data = fish_coral_cover_sites)
anova(m1, m2, test = "Chisq")
```

Then proceed with m2 if the interaction term is not significant. Elsewise to the next proceed with m1.

On completion of the model selection, we will do model diagnostics. This will include checking residuals and the dispersion parameter. Save these as png files. 

Write a diagnosticis report in an Rmarkdown file. 


## Instructions for the agent

The agent will produce a report that answers the above questions. The report will include a description of the data, the methods used for analysis, and the results of the analysis. The code will be written as R scripts. 

Each script should be modular and save intermediate results as datafiles and figures. The final report must be written in Rmarkdown format. The figures will be imported using markdown syntax, e.g. `![](outputs/plots/figure1.png)`. Don't use R code for figures in the markdown report. 
Summary tables should be imported from .csv files and created using the `knitr::kable()` function in Rmarkdown. 
The report must include the following sections:

- Study aims
- Data methodology
- Analysis methodology
- Results
  - Model selection and verification
  - Model fit statistics
  - Plots of predicted fish abundance (log-link scale) based on the final model, with confidence intervals
  - Relevant statistics (r2, p-values, etc.)

The agent is must produce diagnostic plots and a separate report on the model diagnostics. 

### Tech context
- We will use the R program
- tidyverse packages for data manipulation
- ggplot2 for data visualization
- use `theme_set(theme_classic())` for plots
- Use the `MASS` package for the negative binomial model, however don't load it globally with `library(MASS)`, instead use `MASS::glm.nb()` to avoid namespace conflicts.
- Use `visreg` package for plotting model effects and confidence intervals, e.g. `visreg::visreg(m2, "CB_cover", "soft_cover", gg=TRUE, scale = 'linear')`

Keep your scripts short and modular to facilitate debugging. Don't complete all of the steps below in one script. Finish scripts where it makes sense and save intermediate datasets. 

When using Rscript to run R scripts in terminal put quotes around the file, e.g. `Rscript "1_model.R"`

### Workflow 

1. Create a todo list and keep track of progress
2. Data processing including standardizing coral variables by number of points
3. Model selection and verification, produce diagnostic plots
4. Model diagnostic plots markdown report 
5. Create plots of predictions from the final model
6. Write report in markdown format

### Directory structure 

```
glm-test-case/
├── data/                    # Processed data files and intermediate datasets
├── fish-coral.csv          # Raw data file with fish and coral cover measurements
├── glm-readme.md           # This readme file with project documentation
├── initial-prompt.md       # Initial project prompt and requirements
├── outputs/                # Generated output files
│   └── plots/              # Diagnostic plots and visualization outputs (PNG files)
└── scripts/                # R scripts for data analysis and modeling
```

Put the .rmd reports in the top-level directory. 

## Meta data 

### fish-coral.csv

Location: `data/fish-coral.csv`

Variables
- site: Unique site IDs, use to join to benthic_cover.csv
- reef.ID: Unique reef ID
- pres.topa: number of Topa counted (local name for Bolbometopon)
- pres.habili: number of Habili counted (local name for Cheilinus) 
- secchi: Horizontal secchi depth (m), higher values mean the water is less turbid
- flow: Factor indicating if tidal flow was "Strong" or "Mild" at the site
- logged: Factor indicating if the site was in a region with logging "Logged" or without logging "Not logged"
- coordx: X coordinate in UTM zone 57S
- coordy: Y coordinate in UTM zone 57S
- CB_cover: Number of PIT points for branching coral cover
- soft_cover: Number of PIT points for soft coral cover
- n_pts: Number of PIT points at this site (for normalizing cover to get per cent cover)
- dist_to_logging_km: Linear distance to nearest log pond (site where logging occurs) in kilometres. 

~~~

#### Yield per recruit analysis 

~~~
# Yield per recruit analysis for Bolbometopon muricatum

## Introduction
This project will analyze the yield per recruit (YPR) for *Bolbometopon muricatum*, the bumphead parrotfish. We will calculate fisheries reference points for different size limits to inform sustainable fishing practices. 

## Aims of the analysis

1. Calculate yield per recruit curves for four scenarios: a base case with no size limits and three size limits (400, 500, and 600 mm). 
2. Determine fisheries reference points: Fmax, Ymax, and F01 for each scenarios. 
3. Plot the yield curves (harvest rate vs yield) for each scenario. 

## Biological and fisheries parameters

The analysis will use the following biological parameters for *Bolbometopon muricatum*:

### Growth parameters (von Bertalanffy growth equation)
- **Linf**: 1070 mm (asymptotic length)
- **K**: 0.15 per year (growth coefficient)
- **t0**: -0.074 years (theoretical age at length zero)

### Mortality and other parameters
- **M**: 0.169 per year (instantaneous natural mortality rate)
- **Maximum age**: 29 years
- **Initial recruitment**: 1000 individuals (per recruit analysis)

### Length-weight relationship parameters
- **a**: 1.168 × 10^(-6) (length-weight coefficient)
- **b**: 3.409 (length-weight exponent)
- Note: Length in mm, weight in grams, convert to kg for yield calculations

### Selectivity parameters
- **delta**: 0.001 (selectivity slope parameter)
- **A50**: Age at 50% selectivity (calculated based on size limits). For the base case this is 3 years. For the size limit scenarios the A50 values will need to be calculated from the inverse von Bertalanffy growth equation.

## Reference points 

- **Ymax**: Maximum yield per recruit for a scenario
- **Fmax**: Fishing mortality rate (instantaneous) that produces Ymax for each scenario
- **F01**: Fishing mortality rate (instantaneous) where the slope of the yield curve equals 10% of the slope at the origin (a more conservative reference point than Fmax)

## Analysis methodology

We will use yield per recruit (YPR) analysis to evaluate the effects of different fishing mortalities and size limits on the potential yield from this fishery. The steps are: 

1. **Growth modeling**: Calculate length-at-age using the von Bertalanffy growth equation
2. **Weight conversion**: Convert length-at-age to weight-at-age using allometric relationships
3. **Calculate A50 values**: For each size limit, calculate the age at 50% selectivity using the inverse von Bertalanffy equation
4. **Selectivity modeling**: Model how fishing selectivity changes with age based for each scenario. 
4. **Population modeling**: Use the Baranov catch equation to model fishing and natural mortality
5. **Yield calculation**: Calculate yield per recruit across a range of fishing mortalities
6. **Reference point estimation**: Determine Fmax, Ymax, and F01 from yield curves

### Key equations (provide as R functions)

#### Von Bertalanffy growth equation
```r
Linf * (1 - exp(-k * (age - t0)))
```

#### Inverse von Bertalanffy (age at length)
```r
(log(1 - length / Linf) / -k) + t0
```

#### Length to weight conversion
Note, length in mm, returns weight in grams
```
a * length^b
```

#### Logistic selectivity function
```
1/(1 + exp(-log(19) * (A - A50)/(delta)))
```
Note that `A50` is the age at 50% selectivity, and `delta` controls the slope of the selectivity curve. For a size limit you should set `A50` to the age at which fish reach that size limit and `delta` to a small value (e.g. 0.001) to get a steep selectivity curve.


#### Population dynamics

```r
Z <- M + Fat  # Total mortality at age
Na <- Nt * exp(-Z)  # Number of fish at age after mortality
``` 

Note there is no mortality at age 0, so the first age class is not included in the calculations. 

#### Baranov catch equation
```r
(Fat[a]/(M + Fat[a])) * Na * (1 - exp(-(Z[a])))
```
Where: 
- `Fat[a]` is the fishing mortality at age `a`
- `Na` is the number of fish at age `a`
- `Z[a]` is the total mortality at age `a` (natural + fishing)

## Instructions for the agent

### Goals 

Fill out the reference point values in `ypr_reference_points.csv` with the calculated Fmax, Ymax, and F01 values for each of the three size limits (400, 500, and 600 mm) and the baseline scenario with no size limit.

Create a plot showing the yield curves (yield against fishing mortality) for all four scenarios. 

### Tech context
- Use R programming language
- tidyverse packages for data manipulation
- ggplot2 for data visualization  
- Use `theme_set(theme_bw())` for plots
- purrr package for functional programming (map functions)

Keep scripts modular and save intermediate results. Create separate scripts for different analysis phases.

### Directory structure

```
ypr-test-case/
├── data/                    # Processed data files (if any intermediate datasets)
├── outputs/                 # Generated output files
│   └── plots/              # Yield curve plots and visualizations (PNG files)
├── scripts/                # R scripts for YPR analysis
├── ypr_reference_points.csv # Template file where the agent should fill in the calculated values
└── ypr-readme.md           # This documentation file
```

### Expected outputs

1. **Completed CSV file**: `ypr_reference_points.csv` with all reference point values filled in
2. **Yield curve plots**: Showing yield vs fishing mortality for all size limits


~~~

## Supplemental tables 

Supplemental methods including specification sheets for each case study
Table S1: Correct parameter estimates for the von Bertalanffy growth function case study. 
Table S2: Rubric for human evaluation of the GLM case study results. 
Table S3: Classification of GLM evaluation criteria into types for analysis of aptitude and reliability. 
Table S4: Human evaluations of GLM replicate results created by agents for the case study. 
Table S5: Evaluation criteria and human evaluations of yield per recruit replicate results created by agents for the case study. 
Table S6: Correct parameter estimates for the yield per recruit case study. 